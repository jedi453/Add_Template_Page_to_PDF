#!/data/data/com.termux/files/usr/bin/bash

check_pkg() {
  PKG="$1"
  if ! which "$1" >/dev/null ; then
    echo "Requires Package '$PKG'!" >&2
    echo "Try Running 'apt update && apt install $PKG'" >&2
    exit 1
  fi
}

check_pkg qpdf
check_pkg fzf

export PDF_LOC="$HOME/Books/"
export TEMPLATE_LOC="$HOME/Templates/"

if [ ! -z "$TERMUX_VERSION" ]; then
  if [ ! -L "$PDF_LOC" ]; then
    echo "ERROR: '~/Books' should be a link to your books location!" >&2
    echo " TRY running: 'ln -s /sdcard/Books ~/Books'" >&2
    exit 1
  fi
  if [ ! -L "$TEMPLATE_LOC" ]; then
    echo "ERROR: '~/Templates' should be a link to your templates location!" >&2
    echo " TRY running: 'ln -s /sdcard/noteTemplates ~/Templates'" >&2
    exit 1
  fi
fi

if [ ! -d "$PDF_LOC" ] ;then
  echo "ERROR: Directory '$PDF_LOC' Does not Exist!" >&2
  exit 1
fi

if [ ! -d "$TEMPLATE_LOC" ] ;then
  echo "ERROR: Directory '$PDF_LOC' Does not Exist!" >&2
  exit 1
fi

read -p 'Hit Enter then Search for the Input PDF: ' foo
export INPUT_PDF="$PDF_LOC/$(cd $PDF_LOC; fzf -q '.pdf$ ')"

read -p 'Hit Enter then Search for the Template to Add: ' foo
export TEMPLATE_PDF="$TEMPLATE_LOC/$(cd $TEMPLATE_LOC; fzf -q '.pdf$ ')"

read -p 'page number to append template after: ' PAGE; export PAGE

if [ ! "$PAGE" -gt "0" ]; then
  echo "Invalid Page: '$PAGE'" >&2
  exit 1
fi

if [ ! -d "$HOME/tmp" ]; then
  if ! mkdir "$HOME/tmp"; then
    echo "Failed to Make Directory '$HOME/tmp'" >&2
    exit 1
  fi
fi

if [ -f "$INPUT_PDF" -a -f "$TEMPLATE_PDF" ]; then
  export TMP_FILE="$HOME/tmp/$(basename $INPUT_PDF)"
  cp "$INPUT_PDF" "$TMP_FILE" || exit 1
  echo "'$(basename $INPUT_PDF)' Has been copied to $HOME/tmp/"
  echo "Making Combined PDF..."
  echo " This Could Take a while!..."
  qpdf --no-warn --warning-exit-0 "$TMP_FILE" --pages "$TMP_FILE" "1-$PAGE" "$TEMPLATE_PDF" "1" "$TMP_FILE" "$(($PAGE+1))-z" -- "$HOME/tmp/output.pdf" >/dev/null
  export QPDF_ERR_CODE="$?"
  if [ "$QPDF_ERR_CODE" -ne 0 ]; then
    echo "qpdf failed with error code: $QPDF_ERR_CODE" >&2
    echo "FAILED to Combine PDFs!" >&2
    exit 1
  fi
  export QUERY=''
  read -p "Overwrite '$(basename $INPUT_PDF)' with new PDF? (y/N): " QUERY; export QUERY
  if [ "$QUERY" == 'y' -o "$QUERY" == 'Y' ]; then
    cp "$HOME/tmp/output.pdf" "$INPUT_PDF" || exit 1
    echo SUCCESS!
    exit 0
  else 
    read -p "New Output Filename (Same Directory as Input, omit .pdf suffix): " FILENAME; export FILENAME
    if [ -e "$(dirname $INPUT_PDF)/$FILENAME.pdf" ]; then
      echo "File '$FILENAME.pdf' Already Exists... Refusing to Overwrite..." >&2
      echo "FAILED! Please retry with a different filename!" >&2
      echo "The PDF is still here though, you can manually copy the it with:" >&2
      echo "  cp ~/tmp/output.pdf ~/Books/$FILENAME--$(date +%F--%H-%M-%S).pdf" >&2
      exit 1
    else
      if [ ! -e "$(dirname $INPUT_PDF)/$FILENAME.pdf)" ]; then
        export QUERY=''
        read -p "Write New PDF: \'$(dirname $INPUT_PDF)/$FILENAME.pdf\'? (Y/n): " QUERY; export QUERY
        if [ -z "$QUERY" -o "$QUERY" == "y" -o "$QUERY" == "Y" ]; then
          if cp "$HOME/tmp/output.pdf" "$(dirname $INPUT_PDF)/$FILENAME.pdf"; then
            echo "SUCCESS: Wrote Output to '$(dirname $INPUT_PDF)/$FILENAME.pdf'"
            exit 0
          else
            echo "FAILED: Couldn't Write Output to '$(dirname $INPUT_PDF)/$FILENAME.pdf'" >&2
            exit 1
          fi
        fi
      else
        echo "FAILED: Couldn't Write Output to '$(dirname $INPUT_PDF)/$FILENAME.pdf'" >&2
        echo " FILE EXISTS!" >&2
        exit 1
      fi
    fi
  fi
else
  echo "Either '$INPUT_PDF' or '$TEMPLATE_PDF' Does Not Exist!" >&2
  exit 1
fi
